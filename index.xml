<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>King</title>
    <link>http://answer91.github.io/</link>
    <description>Recent content on King</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wwkanswer@gmail.com (answer-king)</managingEditor>
    <webMaster>wwkanswer@gmail.com (answer-king)</webMaster>
    <copyright>©2019 answer-king</copyright>
    <lastBuildDate>Fri, 15 Feb 2019 17:28:40 +0800</lastBuildDate>
    
	<atom:link href="http://answer91.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>hugo</title>
      <link>http://answer91.github.io/learning/hugo%E6%96%87%E6%A1%A3/</link>
      <pubDate>Fri, 15 Feb 2019 17:28:40 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/learning/hugo%E6%96%87%E6%A1%A3/</guid>
      <description>一、hugo安装 Hugo是golang编写的开源快速搭建静态网站引擎，官方文档https://gohugo.io/getting-started/
这里以Linux系统为例进行安装，mac及windows系统安装可查看官方文档。
1、下载对应系统版本的release https://github.com/gohugoio/hugo/releases 将release文件放在/usr/local/bin目录下，这样hugo可以在任意地方运行，或者将hugo所在目录加入环境变量中。
2、下载GitHub源码进行编译安装（需要下载Go1.11以上版本） mkdir $HOME/src cd $HOME/src git clone https://github.com/gohugoio/hugo.git cd hugo go install  安装好后可以运行下面命令查看是否安装成功
hugo version  二、生成静态网页 1、生成网页 $ hugo new site abc.com $ tree . ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes  通过hugo new site命令生成abc.com静态网页目录，目录结构如上。
 archetypes保存了所写文档的格式
 config.toml文件保存了相关配置信息（hugo支持yaml、toml、json三种格式）
 content中保存了所写的具体文档内容
 data是对不同结构的配置信息
 layouts保存对应网页显示的信息
 static保存了网页的图片布局等信息
 themes是主题信息
  进入abc.</description>
    </item>
    
    <item>
      <title>Dgraph问题排查方法</title>
      <link>http://answer91.github.io/learning/dgraph/</link>
      <pubDate>Fri, 15 Feb 2019 15:20:40 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/learning/dgraph/</guid>
      <description>Dgraph是go语言开发的，所以go语言的相关性能检测工具适合查询，同时可以借助dgraph自带的相关工具和操作系统自带的命令。
1、go语言性能检测工具pprof (1) go tool pprof http://ip:port/debug/pprof/profile(检测cpu使用情况) 例如：go tool pprof localhost:8080/debug/pprof/profile进入命令界面 
通过help可以查看输入的命令，这里常用的top命令显示默认占用CPU最多的10个函数 
通过输入web命令可以将结果在浏览器中显示，更加直观，需要安装Graphviz。  
(2) go tool pprof http://ip:port/debug/pprof/heap(检测堆内存使用情况) 例如：go tool pprof http://localhost:8080/debug/pprof/heap进入命令界面 
同上，可以通过help查看输入的命令，输入top命令显示占用内存前10的函数 
同样，可以通过web命令直观的进行显示 
通过help命令，可以发现pprof的性能情况可以通过ps、svg、pdf等多种形式输出，有些形式的显示需要安装相应的依赖工具。
(3) gc垃圾收集 Golang自带gc，在不改动代码的情况下，可以设置GODEBUG=gctrace=1环境变量启动程序，来向标准错误输出打印gc log。
例如：GODEBUG=gctrace =1 ./xxxx.exe or GODEBUG=gctrace =1 go run main.go 程序将会显示gc信息 
每行显示信息的含义如下：
gc 1 @2.104s 0%: 0.018+1.3+0.076 ms clock, 0.054+0.35&amp;frasl;1.0/3.0+0.23 ms cpu, 4-&amp;gt;4-&amp;gt;3 MB, 5 MB
goal, 4 P
1 表示第一次执行
@2.104s 表示程序执行的总时间</description>
    </item>
    
    <item>
      <title>Linux系统默认python版本切换</title>
      <link>http://answer91.github.io/learning/linux%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4python%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/</link>
      <pubDate>Fri, 15 Feb 2019 14:39:40 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/learning/linux%E7%B3%BB%E7%BB%9F%E9%BB%98%E8%AE%A4python%E7%89%88%E6%9C%AC%E5%88%87%E6%8D%A2/</guid>
      <description>Python版本查看：#python version
1.基于用户修改python版本
# vi ~/.bashrc  修改alias python=’/usr/bin/python3.4’
2.系统级修改
# update-alternatives --list python  查看当前python版本，如果没有需要将相关版本加入进去
# update-alternatives --install /usr/bin/python python /usr/bin/python3.4 100  重新list查看版本是否加入进去，然后切换版本
# update-alternatives --config python  
3.ubuntu安装pip3
# apt-get install python3 # apt-get install python3-pip  </description>
    </item>
    
    <item>
      <title>Ubuntu 14.04 xfce中文输入法安装</title>
      <link>http://answer91.github.io/learning/ubuntu14.04%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85/</link>
      <pubDate>Thu, 31 Jan 2019 16:46:40 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/learning/ubuntu14.04%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95%E5%AE%89%E8%A3%85/</guid>
      <description>这里介绍的是基于fcitx框架的输入法，自带的ibus框架以后再讨论。 这里介绍的偏向于手动安装包
1、安装fcitx框架
这里一般配置好源后便可安装
sudo apt-get install fcitx
2、安装sogou/google/wbpy输入法
搜狗输入法去官网下载，本机测试时需要的版本为
sogoupinyin_2.1.0.0086_amd64.deb
安装：sudo dpkg -i sogoupinyin_2.1.0.0086_amd64.deb
其他输入法安装版本可以去官网下载，安装方法同搜狗拼音 https://packages.ubuntu.com/ 找到对应的Ubuntu版本下搜索并下载
3、setting——&amp;gt;fcitx-configuration，将输入法添加到input methord中
至此，重启即可。
由于使用的是xfce桌面环境，在安装完后会出现添加输入法找不到搜狗的情况，可能需要先重启一下，同时要将keyboard作为默认选择，否则不能进行正常的中英文切换。安装完后，发现系统的language support没有了，可能与keyboard有冲突，还需要研究下。(安装了im-switch与语言支持冲突，二者只能保留一个)
可运行sudo apt-get install language-selector-gnome换成语言支持</description>
    </item>
    
    <item>
      <title>VsCode插件手动安装</title>
      <link>http://answer91.github.io/learning/vscode%E6%8F%92%E4%BB%B6%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85/</link>
      <pubDate>Thu, 31 Jan 2019 16:46:40 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/learning/vscode%E6%8F%92%E4%BB%B6%E6%89%8B%E5%8A%A8%E5%AE%89%E8%A3%85/</guid>
      <description>VsCode是款轻量级的编程环境，提供了丰富的插件库，由于本人机器只能通过浏览器代理浏览网页，所以插件安装就比较麻烦，只能先下载下来再手动安装，具体方法如下。
1、下载需要的vscode版本 https://code.visualstudio.com/Download

我的是Ubuntu系统，下载的deb版本，通过dpkg安装
sudo dpkg -i xxx.deb
安装完后在菜单中就可以找到vscode，打开vscode

如果打不开，运行下面一段代码
sudo sed -i &amp;rsquo;s/BIG-REQUESTS/_IG-REQUESTS/&amp;rsquo; /usr/lib/x86_64-linux-gnu/libxcb.so.1
2、安装插件
网络正常的情况下，直接通过ctrl+shift+p打开命令工具，输入install 即可出现插件安装命令，进入界面直接搜索需要安装的插件即可。

网络不正常，需要手动下载vsix插件，进入插件官网搜索需要的插件，进入插件页面然后下载，https://marketplace.visualstudio.com/vscode。

下载在右侧链接中

下载后即可进行手动安装，vscode也提供了相关命令

也可以通过界面进行安装，切换到插件安装目录，点击左边展开按钮，找到安装路径，如下：</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>http://answer91.github.io/life/welcome/</link>
      <pubDate>Fri, 14 Sep 2018 15:50:14 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/life/welcome/</guid>
      <description>qweqweqweq</description>
    </item>
    
    <item>
      <title>First</title>
      <link>http://answer91.github.io/life/first/</link>
      <pubDate>Fri, 14 Sep 2018 14:31:34 +0800</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/life/first/</guid>
      <description>I&amp;rsquo;m King!
123123123123</description>
    </item>
    
    <item>
      <title></title>
      <link>http://answer91.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/about/</guid>
      <description>Hugo创建个人Blog，目前正在测试中，敬请期待。。。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://answer91.github.io/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>wwkanswer@gmail.com (answer-king)</author>
      <guid>http://answer91.github.io/license/</guid>
      <description>欢迎关注!!</description>
    </item>
    
  </channel>
</rss>